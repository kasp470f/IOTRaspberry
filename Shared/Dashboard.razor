@page "/dashboard"

<div class="header">
    <div>&#60;</div>
    <h1>DASHBOARD</h1>
</div>

<div class="dashboard">
    <div class="main-dashboard">
        <div>
            <img src="https://www.w3schools.com/howto/img_avatar.png">
        </div>
        <div class="center-dashboard">
            <div>TITLE NAVN</div>
            <div>
                <p>
                    <span>âš </span> No warnings or alarm
                </p>
            </div>
        </div>
        <div>
            <span class="status"></span>
        </div>
    </div>

    <div class="lower-dashboard">
        <div>
            <p>Head (m)</p>
            <p>@response.PumpHead</p>
        </div>
        <div>
            <p>Flow (m<sup>3</sup>/h)</p>
            <p>@response.PumpFlow</p>
        </div>
        <div>Controlled from: Grundfos GO Remote</div>
    </div>
</div>

<div class="control-area">
    <div>
        <p>Control Mode</p>
        <img src="https://dummyimage.com/100/00ff48/ff0000.png&text=Image+Found">
        <p>Proportional pressure</p>
    </div>
    <div>
        <p>Set Point</p>
        <img src="https://dummyimage.com/100/00ff48/ff0000.png&text=Image+Found">
        <p>m</p>
    </div>
    <div>
        <p>Operating mode</p>
        <img src="https://dummyimage.com/100/00ff48/ff0000.png&text=Image+Found">
        <p>Normal</p>
    </div>
</div>

@code {
    private string prevResponse = "";
    private ResponseData response = new ResponseData();

    private static DeviceClient deviceClient;
    private static readonly string connectionString = Keys.ConnectionString;

    protected override void OnInitialized() {
        deviceClient = DeviceClient.CreateFromConnectionString(connectionString);
        ReceiveMessagesAsync();
    }

    private async void ReceiveMessagesAsync() {
        while(true) {
            Message msg = await deviceClient.ReceiveAsync();
            if(msg == null) {
                continue;
            }

            string res = Encoding.ASCII.GetString(msg.GetBytes());
            if(res != prevResponse) {
                response = JsonConvert.DeserializeObject<ResponseData>(res);
                prevResponse = res;

                Console.WriteLine("State has changed.");
                await InvokeAsync(() => StateHasChanged());
            }

            await deviceClient.CompleteAsync(msg.LockToken);
        }
    }
}
